FROM tomcat:9.0
LABEL maintainer="Brian Wilson <brian@wildsong.biz>"
LABEL version="1.0"
LABEL biz.wildsong.name="tomcat-geowebcache"

RUN apt-get update && apt-get install -y unzip

ARG GEOWEBCACHE_VERSION
ARG GEOSERVER_DATA_DIR
ARG GEOWEBCACHE_CACHE_DIR

WORKDIR /tmp
ADD https://sourceforge.net/projects/geowebcache/files/geowebcache/${GEOWEBCACHE_VERSION}/geowebcache-${GEOWEBCACHE_VERSION}-war.zip/download geowebcache.war.zip
# during testing, you can pre-download this to speed things up!!
#ADD geowebcache-1.21.1-war.zip geowebcache.war.zip

# Expand the memory space for Tomcat
ENV CATALINA_OPTS "-Djava.awt.headless=true -Xmx768m -Xrs -XX:PerfDataSamplingInterval=500 -Dorg.geotools.referencing.forceXY=true -DGEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR} -DGEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}"

# When the container launches it starts Tomcat, which will deploy any WAR files it finds in the webapps folder, but I can do it manually too.
# I will deploy geoserver and geowebcache here, so that when we install plugins down below, the geoserver files don't get wiped out,
# and as a side effect the Docker image will be able to start faster. And I can mount XML files into the conf folder to modify the set up on the services.

WORKDIR ${CATALINA_HOME}/webapps/geowebcache
RUN unzip /tmp/geowebcache.war.zip geowebcache.war && mv geowebcache.war geowebcache.war.zip && unzip geowebcache.war.zip && \
    rm geowebcache.war.zip /tmp/geowebcache.war.zip

WORKDIR ${CATALINA_HOME}

# Make logging more chatty and spit them out to the console. This sort of throws lots of errors all on its own
#ADD logging.properties lib/

# These folders have to exist for the services to be happy.
RUN mkdir -p ${GEOSERVER_DATA_DIR} && \
    mkdir -p ${GEOWEBCACHE_CACHE_DIR}
VOLUME ${GEOSERVER_DATA_DIR}

WORKDIR ${CATALINA_HOME}

